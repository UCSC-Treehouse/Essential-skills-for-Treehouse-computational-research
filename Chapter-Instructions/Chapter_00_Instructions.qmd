---
title: "Chapter_00_Instructions"
output: 
  md_document:
    variant: gfm
---

In this chapter, you will set up:

-   A GitHub account and repository
-   An RStudio project with Quarto and `renv`

------------------------------------------------------------------------

## Prerequisites

1.  **Install Required Software**

-   [Github Desktop](https://github.com/apps/desktop) (use UCSC email)
-   [Git](https://git-scm.com/downloads)
-   [R](https://www.r-project.org)
-   [RStudio](https://posit.co/download/rstudio-desktop/)
-   Quarto and renv (*instructions below*)

2.  **Organization Access**

-   Ask your mentor, Holly, or Ellen to add you to the 'UCSC-Treehouse'
    GitHub organization.
    Please include your GitHub id in your request.

------------------------------------------------------------------------

## Setup Instructions

### Step 1: Create a New Project with renv

1.  In RStudio:

-   File --\> New Project --\> New Directory --\> Quarto Project

![Create New Project in Github Desktop](Images/create_new_project.png){fig-alt="Image showing file button to create 'New Project'" .border}

![Create New Project in New Directory](Images/project_in_new_directory.png){fig-alt="Image showing button on RStudio to 'Create New Project' within 'New Directory'" .border}

![Create New Quarto Project](Images/new_quarto_project.png){fig-alt="Image showing new Quarto Project button" .border}

-   When creating your new Quarto project, you want to name it in the following format: **YourName_essential_skills_in_computational_research**

-   Create project in your desktop, unless you want it to be a subdirectory of a Vaske Lab or Treehouse folder.
In this case, create this folder and browse to select it.
In the example below, my new project will be created as a subdirectory of my lab folder titled "Vaske_Lab_Treehouse".
-   Make sure to select **"Use renv with this project"**

![Name New Project](Images/name_quarto_project.png){.border
fig-alt="Image showing how to name new Quarto project, put in Vaske or Treehouse folder, and initialize with renv"}

2.  Create your first Quarto notebook:

-   File --\> New File --\> Quarto Document

![Create New Quarto File in Project](Images/create_new_quarto_file.png){.border fig-alt="Image showing how to create a new quarto file in RStudio"
fig-align="center"}

-   Title and save as 'Chapter_01'

![Name New Quarto File](Images/name_new_quarto_file.png){.border fig-alt="Image showing how to name and save a new quarto file in RStudio"}

This is what your new document will look like...

![New Quarto Document](Images/quarto_document.png){.border
fig-alt="Image showing what a newly created quarto document looks like."}

On the top left, you will want to select "Source" view.

![Change to Source View](Images/source_view.png){.border
fig-alt="Switch to source view"}

Next, you will want to clear the existing code & text.
Then, change your YAML heading to the following format:

---
title: "example title"
output: 
  md_document:
    variant: gfm
---

![Change Your YAML Header](Images/yaml_header.png){.border fig-alt="Image showing clear quarto document with corrected YAML header for markdown output"}

Let's break down this header.
Later, when we "render" our document, we *combine* the raw data, code, and text in our .qmd file into a finished document.
The 'output: md_document' ensures that the output is a markdown file.
We want to render to a gfm (GitHub Flavored Markdown), specifically, as it is best viewed on GitHub.

3.  Enable Reproducibility:

You have already initialized this project with renv, ensuring consistency of your package versions, and thus consistency when sharing or reproducing your work.
renv takes and saves a "photo" or "snapshot" of your current packages and versions and restores this exact setup when reopening or sharing the project.
You will do this step each time you install or update a package.
So, to start, let's install 'tidyverse', a collection of packages designed for clean, or *tidy*, data science.

-   In your **R Console**, install 'tidyverse' packages:

```{r install tidyverse}
#| eval: false
install.packages("tidyverse")
```

-   In your **R Console**, take a snapshot:

```{r renv snapshot}
#| eval: false
renv::snapshot()
```

**Note:** In Chapter 01 you will learn another, more concise way to run these two steps in one step.
However, if you forget this, you can always come back to take a current snapshot by running 'renv::snapshot()'.

### Step 4: General Workflow

1.  In GitHub Desktop:

-   Add Existing Repository --\> Choose... --\> Add Repository

![Add Existing Repository](Images/add_local_repository.png)

-   You will see your recent changes to the document in *red*

-   Commit changes to main with message "Initialize project with renv"

![Commit changes to Git](Images/commit_changes_to_git.png){.border
fig-alt="Image showing how to commit changes to Git on GitHub Desktop"}

*note: your \# of files will be different than mine*

-   Create new branch: 'chapter-01' (Branch --\> New Branch --\> Create Branch)

![Create a new branch on GitHub
Desktop](Images/create_new_branch.png){.border
fig-alt="Image showing how to create a new branch on GitHub Desktop"}

2.  Push to GitHub:

-   Publish repository (first time only)
-   Push changes to 'chapter-01' branch

![Push New Changes to Main](Images/.png){.border fig-alt="Image showing how to push newest files changes to main branch"}

3.  Request Review (**once per chapter**)

Upon completion of each chapter, you will 'submit' your work to be reviewed by a mentor.

<<<<<<< Updated upstream
-   Create Pull Request (GitHub Desktop --\> Branch --\> chapter-01 --\> Create Pull Request)

![Create a Pull Request](Images/create_pull_request.png){.border fig-alt="Image showing how to create a new pull request"}

You will be moved to the GitHub browser, where you will add your reviewer and finalize the pull request.

-   Assign your mentor as reviewer
=======
-   Create Pull Request (GitHub Desktop --\> Branch --\> Create Pull
    Request)
    
![Create New Pull Request](Images/create_pull_request.png){.border fig-alt="Image showing how to create a new pull request"}
You will be moved to the GitHub browser, where you will add your reviewer and finalize the pull request.

-   Assign your mentor as reviewer.
You will need their GitHub id.
Here I use Holly Beale as an example reviewer.

![Assign your Mentor as Reviewer](Images/add_reviewer_to_pull_request.png){.border fig-alt="Image showing GitHub browser where you will add a reviewer to your new pull request"}
>>>>>>> Stashed changes


-   Assign your mentor as reviewer.
You will need their GitHub id.
Here I use Holly Beale as an example reviewer.

![Assign your Mentor as Reviewer](Images/add_reviewer_to_pull_request.png){.border fig-alt="Image showing GitHub browser where you will add a reviewer to your new pull request"}

------------------------------------------------------------------------

## Next Steps:

-   Repeat this workflow for **each** chapter

1.  Create a '.qmd.' file
2.  Work on examples, take notes where relevant, complete exercises
3.  Run 'renv::snapshot()' if adding packages
4.  Commit changes to a new branch ('chapter-N')
5.  Create a pull request for mentor review
